<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.9.xsd">
    <changeSet author="brunecker" id="create-table-transaction_book">
        <createTable tableName="transaction_book">
            <column autoIncrement="true" name="id" type="bigint">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="name" type="varchar(255)"/>
            <column name="type" type="varchar(255)">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="brunecker" id="create-table-lease_transaction_book">
        <createTable tableName="lease_transaction_book">
            <column name="lease_id" type="bigint">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="transaction_book_id" type="bigint">
                <constraints nullable="false" primaryKey="true"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="brunecker" id="create-table-transaction_left">
        <createTable tableName="transaction_left">
            <column name="transaction_id" type="bigint">
                <constraints nullable="false" primaryKey="true"/>
            </column>
            <column name="left_id" type="bigint">
                <constraints nullable="false" primaryKey="true"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="brunecker" id="add-column-transaction.transaction_book_id">
        <addColumn tableName="transaction">
            <column name="transaction_book_id" type="bigint" />
        </addColumn>
    </changeSet>

    <changeSet id="migrate-transactions" author="brunecker">
        <addColumn tableName="transaction_book">
            <column name="temp_lease_id" type="bigint" />
        </addColumn>
        <addColumn tableName="transaction">
            <column name="temp_linked_transaction_id" type="bigint" />
        </addColumn>

        <sql>
            <!-- migrate transactions from lease to transaction_book -->
            insert into transaction_book(type, temp_lease_id) select 'CASH', id from lease;
            update transaction t
            set t.transaction_book_id = (select tb.id from transaction_book tb inner join lease l on tb.temp_lease_id = l.id where t.lease_id = l.id)
            where exists(select * from transaction_book tb inner join lease l on tb.temp_lease_id = l.id where t.lease_id = l.id);
            insert into lease_transaction_book(lease_id, transaction_book_id) select temp_lease_id, id from transaction_book where temp_lease_id is not null;

            <!-- create Farue transaction books -->
            insert into transaction_book(name, type)
            values
            ('FaRue Account', 'CASH'),
            ('FaRue Account', 'REVENUE');

            <!-- create contra transactions in CASH book -->
            insert into transaction(kind, booking_date, value_date, value, balance_after, description, issuer, transaction_book_id, temp_linked_transaction_id)
            select case
                       when newValue > 0 then 'CREDIT'
                       else 'DEBIT'
                       end,
                   booking_date,
                   value_date,
                   newValue,
                   0,
                   temp.description,
                   'migration',
                   temp.tb_id,
                   temp.id
            from (select t.id,
                         kind,
                         booking_date,
                         value_date,
                         value,
                         description,
                         case
                             when kind = 'PURCHASE' then (-1) * value
                             when kind = 'CREDIT' then value
                             when kind = 'CORRECTION' then (-1) * value
                             end as newValue,
                         tb.id as tb_id
                  from transaction t, transaction_book tb
                  where kind in ('CREDIT') and tb.name = 'FaRue Account' and tb.type = 'CASH') as temp;

            <!-- create contra transactions in REVENUE book -->
            insert into transaction(kind, booking_date, value_date, value, balance_after, description, issuer, transaction_book_id, temp_linked_transaction_id)
            select case
                       when newValue > 0 then 'CREDIT'
                       else 'DEBIT'
                       end,
                   booking_date,
                   value_date,
                   newValue,
                   0,
                   temp.description,
                   'migration',
                   temp.tb_id,
                   temp.id
            from (select t.id,
                         kind,
                         booking_date,
                         value_date,
                         value,
                         description,
                         case
                             when kind = 'PURCHASE' then (-1) * value
                             when kind = 'CREDIT' then value
                             when kind = 'CORRECTION' then (-1) * value
                             end as newValue,
                         tb.id as tb_id
                  from transaction t, transaction_book tb
                  where kind in ('PURCHASE', 'CORRECTION') and tb.name = 'FaRue Account' and tb.type = 'REVENUE') as temp;

            insert into transaction_left(transaction_id, left_id)
            select links.id1, links.id2
            from (select id as id1, temp_linked_transaction_id as id2
                  from transaction
                  where temp_linked_transaction_id is not null
                  union all
                  select temp_linked_transaction_id as id1, id as id2
                  from transaction
                  where temp_linked_transaction_id is not null) as links;
        </sql>

        <dropColumn tableName="transaction" columnName="temp_linked_transaction_id" />
        <dropColumn tableName="transaction_book" columnName="temp_lease_id" />
    </changeSet>

    <changeSet author="brunecker" id="fk-transaction">
        <addForeignKeyConstraint baseColumnNames="transaction_book_id"
                                 baseTableName="transaction"
                                 constraintName="fk_transaction_transaction_book_id"
                                 referencedColumnNames="id"
                                 referencedTableName="transaction_book"/>
    </changeSet>

    <changeSet author="brunecker" id="fk-transaction_left">
        <addForeignKeyConstraint baseColumnNames="left_id"
                                 baseTableName="transaction_left"
                                 constraintName="fk_transaction_left_left_id"
                                 referencedColumnNames="id"
                                 referencedTableName="transaction"/>

        <addForeignKeyConstraint baseColumnNames="transaction_id"
                                 baseTableName="transaction_left"
                                 constraintName="fk_transaction_left_transaction_id"
                                 referencedColumnNames="id"
                                 referencedTableName="transaction"/>
    </changeSet>

    <changeSet author="brunecker" id="fk-lease_transaction_book">
        <addForeignKeyConstraint baseColumnNames="lease_id"
                                 baseTableName="lease_transaction_book"
                                 constraintName="fk_lease_transaction_book_lease_id"
                                 referencedColumnNames="id"
                                 referencedTableName="lease" />

        <addForeignKeyConstraint baseColumnNames="transaction_book_id"
                                 baseTableName="lease_transaction_book"
                                 constraintName="fk_lease_transaction_book_transaction_book_id"
                                 referencedColumnNames="id"
                                 referencedTableName="transaction_book" />
    </changeSet>

    <changeSet author="brunecker" id="drop-fk-transaction">
        <dropForeignKeyConstraint baseTableName="transaction" constraintName="fk_transaction_lease_id"/>
        <dropForeignKeyConstraint baseTableName="transaction" constraintName="fk_transaction_tenant_id"/>
    </changeSet>

    <changeSet author="brunecker" id="drop-columns-transaction">
        <dropColumn columnName="lease_id" tableName="transaction"/>
        <dropColumn columnName="tenant_id" tableName="transaction"/>
    </changeSet>

    <changeSet author="brunecker" id="constraint-transaction-balance_after-not-null">
        <addNotNullConstraint columnName="balance_after" tableName="transaction" columnDataType="decimal(21,2)"/>
    </changeSet>

    <changeSet author="brunecker" id="constraint-transaction-transaction_book_id-not-null">
        <addNotNullConstraint columnName="transaction_book_id" tableName="transaction" columnDataType="bigint"/>
    </changeSet>

    <changeSet id="fake-data-transaction_book" author="jhipster" context="faker">
        <loadUpdateData
            file="config/liquibase/fake-data/ac30-transaction_book.csv"
            separator=";"
            tableName="transaction_book"
            primaryKey="id">
            <column name="id" type="numeric"/>
            <column name="name" type="string"/>
            <column name="type" type="string"/>
            <!-- jhipster-needle-liquibase-add-loadcolumn - JHipster (and/or extensions) can add load columns here -->
        </loadUpdateData>
    </changeSet>

    <changeSet id="fake-data-transaction" author="jhipster" context="faker">
        <loadUpdateData
            file="config/liquibase/fake-data/ac30-transaction.csv"
            separator=";"
            tableName="transaction"
            primaryKey="id">
            <column name="id" type="numeric"/>
            <column name="lease_id" type="numeric"/>
            <column name="tenant_id" type="numeric"/>
            <column name="kind" type="string"/>
            <column name="booking_date" type="datetime"/>
            <column name="value_date" type="datetime"/>
            <column name="value" type="numeric"/>
            <column name="balance_after" type="numeric"/>
            <column name="description" type="string"/>
            <column name="issuer" type="string"/>
            <column name="recipient" type="string"/>
            <!-- jhipster-needle-liquibase-add-loadcolumn - JHipster (and/or extensions) can add load columns here -->
        </loadUpdateData>
    </changeSet>

    <changeSet id="fake-data-transaction_links" author="brunecker" context="faker">
        <loadData
            file="config/liquibase/fake-data/ac30-transaction_link.csv"
            separator=";"
            tableName="transaction_left">
            <column name="transaction_id" type="numeric"/>
            <column name="left_id" type="numeric"/>
        </loadData>
    </changeSet>

    <changeSet id="increase-transaction-timestamp-precision" author="brunecker">
        <modifyDataType tableName="transaction" columnName="booking_date" newDataType="datetime(3)" />
        <modifyDataType tableName="transaction" columnName="value_date" newDataType="datetime(3)" />
    </changeSet>

</databaseChangeLog>
