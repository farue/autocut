variables:
  M2_HOME: '$CI_PROJECT_DIR/.maven'
  MVN_OPTS: '-ntp -Dmaven.repo.local=$MAVEN_USER_HOME'
  MVN_DISABLE_WEBPACK: '-P !webpack'
  SERVER_URL: '137.226.153.2'
  SSH_OPTS: '-o StrictHostKeyChecking=no'
  DOCKER_COMPOSE_APP: 'src/main/docker/app.yml'
  DOCKER_COMPOSE_MYSQL: 'src/main/docker/mysql.yml'
  REMOTE_DOCKER_COMPOSE_APP: '~/autocut/app.yml'
  REMOTE_DOCKER_COMPOSE_MYSQL: '~/autocut/mysql.yml'

image: maven:3.6-jdk-14

cache:
  key: '$CI_COMMIT_REF_NAME'
  paths:
    - ${MAVEN_USER_HOME}

stages:
  - check
  - build
  - test
  - analyze
  - package
  - release
  - deploy

nohttp:
  stage: check
  script:
    - mvn ${MVN_OPTS} ${MVN_DISABLE_WEBPACK} checkstyle:check

maven-compile:
  stage: build
  script:
    - mvn ${MVN_OPTS} ${MVN_DISABLE_WEBPACK} compile
  artifacts:
    paths:
      - target/classes/
      - target/generated-sources/
    expire_in: 1 day
  needs: []

frontend-compile:
  stage: build
  before_script:
    - export NG_CLI_ANALYTICS="false"
    - mvn ${MVN_OPTS} com.github.eirslett:frontend-maven-plugin:install-node-and-npm -DnodeVersion=v12.13.1 -DnpmVersion=6.13.4
  script:
    - mvn ${MVN_OPTS} com.github.eirslett:frontend-maven-plugin:npm
  needs: []

maven-test:
  stage: test
  script:
    - mvn ${MVN_OPTS} ${MVN_DISABLE_WEBPACK} verify
  artifacts:
    reports:
      junit: target/test-results/**/TEST-*.xml
    paths:
      - target/test-results
      - target/jacoco
    expire_in: 1 day

frontend-test:
  stage: test
  before_script:
    - export NG_CLI_ANALYTICS="false"
    - mvn ${MVN_OPTS} com.github.eirslett:frontend-maven-plugin:install-node-and-npm -DnodeVersion=v12.13.1 -DnpmVersion=6.13.4
  script:
    - mvn ${MVN_OPTS} com.github.eirslett:frontend-maven-plugin:npm
    - mvn ${MVN_OPTS} com.github.eirslett:frontend-maven-plugin:npm -Dfrontend.npm.arguments='run test'
  artifacts:
    reports:
      junit: target/test-results/TESTS-results-jest.xml
    paths:
      - target/test-results
      - target/jacoco
    expire_in: 1 day

sonar-analyze:
  stage: analyze
  dependencies:
    - maven-test
    - frontend-test
  script:
    - mvn ${MVN_OPTS} compile
    - mvn org.jacoco:jacoco-maven-plugin:prepare-agent initialize sonar:sonar -Dsonar.projectKey=autocut -Dsonar.host.url=https://www.farue.rwth-aachen.de/sonar -Dsonar.login=$SONAR_TOKEN
  allow_failure: true

maven-package:
  stage: package
  script:
    - mvn ${MVN_OPTS} verify -Pprod -DskipTests
  artifacts:
    paths:
      - target/*.jar
      - target/classes
    expire_in: 1 day
  only:
    refs:
      - release
  needs:
    - maven-test
    - frontend-test

docker-push:
  stage: release
  variables:
    REGISTRY_URL: registry.git.rwth-aachen.de
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHA
  dependencies:
    - maven-package
  script:
    - mvn ${MVN_OPTS} compile jib:build -Pprod -Djib.to.image=$IMAGE_TAG -Djib.to.auth.username=gitlab-ci-token  -Djib.to.auth.password=$CI_BUILD_TOKEN
  only:
    refs:
      - release

docker-deploy:
  stage: deploy
  script:
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - scp ${SSH_OPTS} ${DOCKER_COMPOSE_APP} gitlab@${SERVER_URL}:${REMOTE_DOCKER_COMPOSE_APP}
    - scp ${SSH_OPTS} ${DOCKER_COMPOSE_MYSQL} gitlab@${SERVER_URL}:${REMOTE_DOCKER_COMPOSE_MYSQL}
    - ssh ${SSH_OPTS} gitlab@${SERVER_URL} "docker login -u ${CI_DEPLOY_USER} -p ${CI_DEPLOY_PASSWORD} ${CI_REGISTRY}
      && cd ~/autocut
      && docker-compose -f app.yml pull
      && docker-compose -f app.yml up -d"
  only:
    refs:
      - release
