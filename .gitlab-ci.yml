image: gradle:7.3-jdk17

cache:
  paths:
    - .gradle/
    - build/

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: '/certs'
  DOCKER_TLS_VERIFY: '1'
  DOCKER_CERT_PATH: '/certs/client'

stages:
  - check
  - build
  - test
  - analyze
  - package
  - release
  - deploy-preview
  - deploy-prod

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

nohttp:
  stage: check
  script:
    - gradle checkstyleNohttp

gradle-compile:
  stage: build
  script:
    - gradle compileJava
  needs: []

gradle-test:
  stage: test
  script:
    - gradle test
  artifacts:
    reports:
      junit: build/test-results/test/TEST-*.xml
    paths:
      - build/test-results/
      - build/jacoco/
    expire_in: 1 day

gradle-integration-test:
  # DinD service is required for Testcontainers
  services:
    - docker:20.10-dind
  variables:
    # Instruct Testcontainers to use the daemon of DinD.
    DOCKER_HOST: 'tcp://docker:2376'
  stage: test
  script:
    - gradle integrationTest -Ptestcontainers
  artifacts:
    reports:
      junit: build/test-results/integrationTest/TEST-*.xml
    paths:
      - build/test-results/
      - build/jacoco/
    expire_in: 1 day

.sonar-analyze:
  stage: analyze
  except:
    - merge_requests
  dependencies:
    - gradle-compile
    - gradle-test
    - gradle-integration-test
  script:
    - gradle sonarqube -x test -Dsonar.projectKey=autocut -Dsonar.host.url=https://www.farue.rwth-aachen.de/sonar -Dsonar.login=$SONAR_TOKEN
  allow_failure: true

gradle-package:
  stage: package
  script:
    - gradle bootJar -Pprod
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

docker-push:
  stage: release
  resource_group: deploy
  dependencies:
    - gradle-package
  script:
    - gradle jib -Pprod -Djib.to.image=$CI_REGISTRY_IMAGE -Djib.to.tags=$CI_COMMIT_REF_SLUG-$CI_COMMIT_SHORT_SHA,$CI_COMMIT_REF_SLUG-latest -Djib.to.auth.username=gitlab-ci-token -Djib.to.auth.password=$CI_BUILD_TOKEN -Djib.httpTimeout=120000
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

trigger-deploy-review:
  stage: deploy-preview
  trigger: farue/autosetup
  resource_group: deploy
  variables:
    PLAYBOOK: server.yml
    INVENTORY: dev
    TAGS: docker,autocut,dns-dev-create,dns-dev-deploy
    SKIP_TAGS: backup,restore
    VARS: 'autocut_service_dir=/srv/autocut/$CI_COMMIT_REF_NAME
      autocut_tag=$CI_COMMIT_REF_SLUG-latest
      autocut_host=api.$CI_ENVIRONMENT_SLUG.dev.farue.rwth-aachen.de
      autocut_profiles=review,api-docs
      autocut_db_volume=false
      autocut_db_expose_port=false
      dns_dev_subdomain=api.$CI_ENVIRONMENT_SLUG'
    ENVIRONMENT_NAME: autocut/review/$CI_COMMIT_REF_SLUG
    ENVIRONMENT_URL: https://www.$CI_ENVIRONMENT_SLUG.dev.farue.rwth-aachen.de
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'

trigger-deploy-staging:
  stage: deploy-preview
  trigger: farue/autosetup
  resource_group: deploy
  variables:
    PLAYBOOK: server.yml
    INVENTORY: staging
    TAGS: docker,autocut
    SKIP_TAGS: backup,restore
    VARS: 'autocut_tag=$CI_COMMIT_REF_SLUG-latest
      autocut_host=api.staging.farue.rwth-aachen.de
      autocut_profiles=staging,api-docs'
    ENVIRONMENT_NAME: autocut/staging
    ENVIRONMENT_URL: https://www.staging.farue.rwth-aachen.de
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

trigger-deploy-prod:
  stage: deploy-prod
  trigger: farue/autosetup
  resource_group: deploy
  variables:
    PLAYBOOK: server.yml
    INVENTORY: production
    TAGS: docker,autocut
    SKIP_TAGS: backup,restore
    VARS: 'autocut_tag=$CI_COMMIT_REF_SLUG-latest
      autocut_host=api.farue.rwth-aachen.de
      autocut_profiles=prod'
    ENVIRONMENT_NAME: autocut/production
    ENVIRONMENT_URL: https://www.farue.rwth-aachen.de
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
